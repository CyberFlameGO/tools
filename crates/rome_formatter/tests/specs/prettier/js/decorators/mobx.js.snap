---
source: crates/rome_formatter/tests/prettier_tests.rs
assertion_line: 144
expression: mobx.js

---
# Input
```js
import {observable} from "mobx";

@observer class OrderLine {
  @observable price:number = 0;
  @observable amount:number = 1;

  constructor(price) {
    this.price = price;
  }

  @computed get total() {
    return this.price * this.amount;
  }

  @action.bound setPrice(price) {
    this.price = price;
  }

  @computed
  get total() {
    return this.price * this.amount;
  }

  @action.bound
  setPrice(price) {
    this.price = price;
  }
  
  @computed @computed @computed @computed @computed @computed @computed get total() {
    return this.price * this.amount;
  }

  @action handleDecrease = (event: React.ChangeEvent<HTMLInputElement>) => this.count--;
  
  @action handleSomething = (event: React.ChangeEvent<HTMLInputElement>) => doSomething();
}

```

# Output
```js
import { observable } from "mobx";

@observer class OrderLine {
  @observable price:number = 0;
  @observable amount:number = 1;

  constructor(price) {
    this.price = price;
  }

  @computed get total() {
    return this.price * this.amount;
  }

  @action.bound setPrice(price) {
    this.price = price;
  }

  @computed
  get total() {
    return this.price * this.amount;
  }

  @action.bound
  setPrice(price) {
    this.price = price;
  }
  
  @computed @computed @computed @computed @computed @computed @computed get total() {
    return this.price * this.amount;
  }

  @action handleDecrease = (event: React.ChangeEvent<HTMLInputElement>) => this.count--;
  
  @action handleSomething = (event: React.ChangeEvent<HTMLInputElement>) => doSomething();
}

```

# Errors
```
error[SyntaxError]: decorators are a TypeScript only feature. Convert your file to a TypeScript file or remove the syntax.
  ┌─ mobx.js:3:1
  │
3 │ @observer class OrderLine {
  │ ^^^^^^^^^ TypeScript only syntax

error[SyntaxError]: decorators are a TypeScript only feature. Convert your file to a TypeScript file or remove the syntax.
  ┌─ mobx.js:4:3
  │
4 │   @observable price:number = 0;
  │   ^^^^^^^^^^^ TypeScript only syntax

error[SyntaxError]: return types can only be used in TypeScript files
  ┌─ mobx.js:4:20
  │
4 │   @observable price:number = 0;
  │                    ^^^^^^^ remove this type annotation

error[SyntaxError]: decorators are a TypeScript only feature. Convert your file to a TypeScript file or remove the syntax.
  ┌─ mobx.js:5:3
  │
5 │   @observable amount:number = 1;
  │   ^^^^^^^^^^^ TypeScript only syntax

error[SyntaxError]: return types can only be used in TypeScript files
  ┌─ mobx.js:5:21
  │
5 │   @observable amount:number = 1;
  │                     ^^^^^^^ remove this type annotation

error[SyntaxError]: decorators are a TypeScript only feature. Convert your file to a TypeScript file or remove the syntax.
   ┌─ mobx.js:11:3
   │
11 │   @computed get total() {
   │   ^^^^^^^^^ TypeScript only syntax

error[SyntaxError]: decorators are a TypeScript only feature. Convert your file to a TypeScript file or remove the syntax.
   ┌─ mobx.js:15:3
   │
15 │   @action.bound setPrice(price) {
   │   ^^^^^^^^^^^^^ TypeScript only syntax

error[SyntaxError]: decorators are a TypeScript only feature. Convert your file to a TypeScript file or remove the syntax.
   ┌─ mobx.js:19:3
   │
19 │   @computed
   │   ^^^^^^^^^ TypeScript only syntax

error[SyntaxError]: decorators are a TypeScript only feature. Convert your file to a TypeScript file or remove the syntax.
   ┌─ mobx.js:24:3
   │
24 │   @action.bound
   │   ^^^^^^^^^^^^^ TypeScript only syntax

error[SyntaxError]: decorators are a TypeScript only feature. Convert your file to a TypeScript file or remove the syntax.
   ┌─ mobx.js:29:3
   │
29 │   @computed @computed @computed @computed @computed @computed @computed get total() {
   │   ^^^^^^^^^ TypeScript only syntax

error[SyntaxError]: decorators are a TypeScript only feature. Convert your file to a TypeScript file or remove the syntax.
   ┌─ mobx.js:29:13
   │
29 │   @computed @computed @computed @computed @computed @computed @computed get total() {
   │             ^^^^^^^^^ TypeScript only syntax

error[SyntaxError]: decorators are a TypeScript only feature. Convert your file to a TypeScript file or remove the syntax.
   ┌─ mobx.js:29:23
   │
29 │   @computed @computed @computed @computed @computed @computed @computed get total() {
   │                       ^^^^^^^^^ TypeScript only syntax

error[SyntaxError]: decorators are a TypeScript only feature. Convert your file to a TypeScript file or remove the syntax.
   ┌─ mobx.js:29:33
   │
29 │   @computed @computed @computed @computed @computed @computed @computed get total() {
   │                                 ^^^^^^^^^ TypeScript only syntax

error[SyntaxError]: decorators are a TypeScript only feature. Convert your file to a TypeScript file or remove the syntax.
   ┌─ mobx.js:29:43
   │
29 │   @computed @computed @computed @computed @computed @computed @computed get total() {
   │                                           ^^^^^^^^^ TypeScript only syntax

error[SyntaxError]: decorators are a TypeScript only feature. Convert your file to a TypeScript file or remove the syntax.
   ┌─ mobx.js:29:53
   │
29 │   @computed @computed @computed @computed @computed @computed @computed get total() {
   │                                                     ^^^^^^^^^ TypeScript only syntax

error[SyntaxError]: decorators are a TypeScript only feature. Convert your file to a TypeScript file or remove the syntax.
   ┌─ mobx.js:29:63
   │
29 │   @computed @computed @computed @computed @computed @computed @computed get total() {
   │                                                               ^^^^^^^^^ TypeScript only syntax

error[SyntaxError]: decorators are a TypeScript only feature. Convert your file to a TypeScript file or remove the syntax.
   ┌─ mobx.js:33:3
   │
33 │   @action handleDecrease = (event: React.ChangeEvent<HTMLInputElement>) => this.count--;
   │   ^^^^^^^ TypeScript only syntax

error[SyntaxError]: Type annotations are a TypeScript only feature. Convert your file to a TypeScript file or remove the syntax.
   ┌─ mobx.js:33:34
   │
33 │   @action handleDecrease = (event: React.ChangeEvent<HTMLInputElement>) => this.count--;
   │                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TypeScript only syntax

error[SyntaxError]: decorators are a TypeScript only feature. Convert your file to a TypeScript file or remove the syntax.
   ┌─ mobx.js:35:3
   │
35 │   @action handleSomething = (event: React.ChangeEvent<HTMLInputElement>) => doSomething();
   │   ^^^^^^^ TypeScript only syntax

error[SyntaxError]: Type annotations are a TypeScript only feature. Convert your file to a TypeScript file or remove the syntax.
   ┌─ mobx.js:35:35
   │
35 │   @action handleSomething = (event: React.ChangeEvent<HTMLInputElement>) => doSomething();
   │                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TypeScript only syntax


```


