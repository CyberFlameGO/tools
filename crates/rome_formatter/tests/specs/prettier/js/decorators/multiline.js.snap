---
source: crates/rome_formatter/tests/prettier_tests.rs
assertion_line: 144
expression: multiline.js

---
# Input
```js
class Foo {
  @deco([
    foo,
    bar
  ]) prop = value;

  @decorator([]) method() {}

  @decorator([
  ]) method() {}

  @decorator({}) method() {}

  @decorator({
  }) method() {}
}

```

# Output
```js
class Foo {
  @deco([
    foo,
    bar
  ]) prop = value;

  @decorator([]) method() {}

  @decorator([
  ]) method() {}

  @decorator({}) method() {}

  @decorator({
  }) method() {}
}

```

# Errors
```
error[SyntaxError]: decorators are a TypeScript only feature. Convert your file to a TypeScript file or remove the syntax.
  ┌─ multiline.js:2:3
  │  
2 │ ┌   @deco([
3 │ │     foo,
4 │ │     bar
5 │ │   ]) prop = value;
  │ └────^ TypeScript only syntax

error[SyntaxError]: decorators are a TypeScript only feature. Convert your file to a TypeScript file or remove the syntax.
  ┌─ multiline.js:7:3
  │
7 │   @decorator([]) method() {}
  │   ^^^^^^^^^^^^^^ TypeScript only syntax

error[SyntaxError]: decorators are a TypeScript only feature. Convert your file to a TypeScript file or remove the syntax.
   ┌─ multiline.js:9:3
   │  
 9 │ ┌   @decorator([
10 │ │   ]) method() {}
   │ └────^ TypeScript only syntax

error[SyntaxError]: decorators are a TypeScript only feature. Convert your file to a TypeScript file or remove the syntax.
   ┌─ multiline.js:12:3
   │
12 │   @decorator({}) method() {}
   │   ^^^^^^^^^^^^^^ TypeScript only syntax

error[SyntaxError]: decorators are a TypeScript only feature. Convert your file to a TypeScript file or remove the syntax.
   ┌─ multiline.js:14:3
   │  
14 │ ┌   @decorator({
15 │ │   }) method() {}
   │ └────^ TypeScript only syntax


```


