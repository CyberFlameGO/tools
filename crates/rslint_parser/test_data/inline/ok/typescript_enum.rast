JsModule {
    interpreter_token: missing (optional),
    directives: JsDirectiveList [],
    items: JsModuleItemList [
        TsEnum {
            const_token: missing (optional),
            enum_token: ENUM_KW@0..5 "enum" [] [Whitespace(" ")],
            ident: JsName {
                value_token: IDENT@5..7 "A" [] [Whitespace(" ")],
            },
            l_curly_token: L_CURLY@7..8 "{" [] [],
            members: TsEnumMemberList [],
            r_curly_token: R_CURLY@8..9 "}" [] [],
        },
        TsEnum {
            const_token: missing (optional),
            enum_token: ENUM_KW@9..15 "enum" [Newline("\n")] [Whitespace(" ")],
            ident: JsName {
                value_token: IDENT@15..17 "A" [] [Whitespace(" ")],
            },
            l_curly_token: L_CURLY@17..19 "{" [] [Whitespace(" ")],
            members: TsEnumMemberList [
                TsEnumMember {
                    js_name: JsName {
                        value_token: IDENT@19..20 "a" [] [],
                    },
                    eq_token: missing (required),
                    js_any_expression: missing (required),
                },
                COMMA@20..22 "," [] [Whitespace(" ")],
                TsEnumMember {
                    js_name: JsName {
                        value_token: IDENT@22..23 "b" [] [],
                    },
                    eq_token: missing (required),
                    js_any_expression: missing (required),
                },
                COMMA@23..25 "," [] [Whitespace(" ")],
                TsEnumMember {
                    js_name: JsName {
                        value_token: IDENT@25..26 "c" [] [],
                    },
                    eq_token: missing (required),
                    js_any_expression: missing (required),
                },
                COMMA@26..28 "," [] [Whitespace(" ")],
            ],
            r_curly_token: R_CURLY@28..29 "}" [] [],
        },
        TsEnum {
            const_token: missing (optional),
            enum_token: ENUM_KW@29..35 "enum" [Newline("\n")] [Whitespace(" ")],
            ident: JsName {
                value_token: IDENT@35..37 "A" [] [Whitespace(" ")],
            },
            l_curly_token: L_CURLY@37..39 "{" [] [Whitespace(" ")],
            members: TsEnumMemberList [
                TsEnumMember {
                    js_name: JsName {
                        value_token: IDENT@39..41 "a" [] [Whitespace(" ")],
                    },
                    eq_token: EQ@41..43 "=" [] [Whitespace(" ")],
                    js_any_expression: JsBinaryExpression {
                        left: JsNumberLiteralExpression {
                            value_token: JS_NUMBER_LITERAL@43..45 "1" [] [Whitespace(" ")],
                        },
                        operator: PLUS@45..47 "+" [] [Whitespace(" ")],
                        right: JsNumberLiteralExpression {
                            value_token: JS_NUMBER_LITERAL@47..49 "1" [] [Whitespace(" ")],
                        },
                    },
                },
            ],
            r_curly_token: R_CURLY@49..50 "}" [] [],
        },
        TsEnum {
            const_token: CONST_KW@50..57 "const" [Newline("\n")] [Whitespace(" ")],
            enum_token: ENUM_KW@57..62 "enum" [] [Whitespace(" ")],
            ident: JsName {
                value_token: IDENT@62..64 "A" [] [Whitespace(" ")],
            },
            l_curly_token: L_CURLY@64..65 "{" [] [],
            members: TsEnumMemberList [],
            r_curly_token: R_CURLY@65..66 "}" [] [],
        },
    ],
    eof_token: EOF@66..67 "" [Newline("\n")] [],
}

0: JS_MODULE@0..67
  0: (empty)
  1: JS_DIRECTIVE_LIST@0..0
  2: JS_MODULE_ITEM_LIST@0..66
    0: TS_ENUM@0..9
      0: (empty)
      1: ENUM_KW@0..5 "enum" [] [Whitespace(" ")]
      2: JS_NAME@5..7
        0: IDENT@5..7 "A" [] [Whitespace(" ")]
      3: L_CURLY@7..8 "{" [] []
      4: TS_ENUM_MEMBER_LIST@8..8
      5: R_CURLY@8..9 "}" [] []
    1: TS_ENUM@9..29
      0: (empty)
      1: ENUM_KW@9..15 "enum" [Newline("\n")] [Whitespace(" ")]
      2: JS_NAME@15..17
        0: IDENT@15..17 "A" [] [Whitespace(" ")]
      3: L_CURLY@17..19 "{" [] [Whitespace(" ")]
      4: TS_ENUM_MEMBER_LIST@19..28
        0: TS_ENUM_MEMBER@19..20
          0: JS_NAME@19..20
            0: IDENT@19..20 "a" [] []
          1: (empty)
          2: (empty)
        1: COMMA@20..22 "," [] [Whitespace(" ")]
        2: TS_ENUM_MEMBER@22..23
          0: JS_NAME@22..23
            0: IDENT@22..23 "b" [] []
          1: (empty)
          2: (empty)
        3: COMMA@23..25 "," [] [Whitespace(" ")]
        4: TS_ENUM_MEMBER@25..26
          0: JS_NAME@25..26
            0: IDENT@25..26 "c" [] []
          1: (empty)
          2: (empty)
        5: COMMA@26..28 "," [] [Whitespace(" ")]
      5: R_CURLY@28..29 "}" [] []
    2: TS_ENUM@29..50
      0: (empty)
      1: ENUM_KW@29..35 "enum" [Newline("\n")] [Whitespace(" ")]
      2: JS_NAME@35..37
        0: IDENT@35..37 "A" [] [Whitespace(" ")]
      3: L_CURLY@37..39 "{" [] [Whitespace(" ")]
      4: TS_ENUM_MEMBER_LIST@39..49
        0: TS_ENUM_MEMBER@39..49
          0: JS_NAME@39..41
            0: IDENT@39..41 "a" [] [Whitespace(" ")]
          1: EQ@41..43 "=" [] [Whitespace(" ")]
          2: JS_BINARY_EXPRESSION@43..49
            0: JS_NUMBER_LITERAL_EXPRESSION@43..45
              0: JS_NUMBER_LITERAL@43..45 "1" [] [Whitespace(" ")]
            1: PLUS@45..47 "+" [] [Whitespace(" ")]
            2: JS_NUMBER_LITERAL_EXPRESSION@47..49
              0: JS_NUMBER_LITERAL@47..49 "1" [] [Whitespace(" ")]
      5: R_CURLY@49..50 "}" [] []
    3: TS_ENUM@50..66
      0: CONST_KW@50..57 "const" [Newline("\n")] [Whitespace(" ")]
      1: ENUM_KW@57..62 "enum" [] [Whitespace(" ")]
      2: JS_NAME@62..64
        0: IDENT@62..64 "A" [] [Whitespace(" ")]
      3: L_CURLY@64..65 "{" [] []
      4: TS_ENUM_MEMBER_LIST@65..65
      5: R_CURLY@65..66 "}" [] []
  3: EOF@66..67 "" [Newline("\n")] []
